<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Polaris&#39;s Blog</title>
    <link>https://blog.kcbpmbf.com/</link>
    
    <atom:link href="https://blog.kcbpmbf.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>KCBPMBF/Polaris-Koi的博客</description>
    <pubDate>Wed, 30 Nov 2022 16:30:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>UNREAL ENGINE 5.0</title>
      <link>https://blog.kcbpmbf.com/2022/11/UNREALENGINE/</link>
      <guid>https://blog.kcbpmbf.com/2022/11/UNREALENGINE/</guid>
      <pubDate>Wed, 30 Nov 2022 15:40:59 GMT</pubDate>
      
      <description>&lt;p&gt;Polaris 2022&amp;#x2F;11&amp;#x2F;30&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Polaris 2022&#x2F;11&#x2F;30</p><span id="more"></span><h1 id="1-快捷键"><a href="#1-快捷键" class="headerlink" title="1.快捷键"></a>1.快捷键</h1><ul><li>E 向上 Q 向下 +鼠标右键</li><li>平移 W</li><li>旋转 E</li><li>缩放 R</li><li>聚焦物体 选择某个物体 按F或在右边双击</li><li>定位物体文件 选中后 Ctrl+B</li><li>编辑物品 Ctrl+E</li><li>撤回操作 Ctrl+Z</li><li>恢复操作 Ctrl+Y</li><li>打开日志 alt+&#96;</li><li>内容侧滑菜单 Ctrl+空格</li><li>保存 Ctrl+S</li></ul><h1 id="2-常见问题"><a href="#2-常见问题" class="headerlink" title="2.常见问题"></a>2.常见问题</h1><h2 id="2-1-Video-Memory-Has-Been-exhausted"><a href="#2-1-Video-Memory-Has-Been-exhausted" class="headerlink" title="2.1 Video Memory Has Been exhausted"></a>2.1 Video Memory Has Been exhausted</h2><p>项目设置搜索Default RHI 改成dx11即可解决</p><h2 id="2-2-UE改着色器缓存路径"><a href="#2-2-UE改着色器缓存路径" class="headerlink" title="2.2 UE改着色器缓存路径"></a>2.2 UE改着色器缓存路径</h2><p><strong>1. 编辑器的偏好设置中搜ddc改路径（推荐）</strong><br>2. 引擎版本\Engine\Config\BaseEngine.ini<br>搜索[InstalledDerivedDataBackendGraph]<br>改成Path&#x3D;”%GAMEDIR%DerivedDataCache”将会在项目文件夹中保存编译的着色器<br><em>不推荐，因为同一个地图创建2个或拷贝到不同项目中去光影天空什么的就是着色器将会重新编译 浪费空间和资源</em><br>3. 改成<strong>Path&#x3D;”D:\Epic\DerivedDataCache”</strong><br>然后把<strong>C:\Users\你的用户名\AppData\Local\UnrealEngine\Common\DerivedDataCache</strong>拷贝到D盘的路径<br><em>即不占用C盘空间 也不会引用重新编译</em><br>4. 也可以设置环境变量 详见<br><a href="https://docs.unrealengine.com/5.0/zh-CN/derived-data-cache/">ue官方文档</a><br>注：以上路径请自行替换为你本地的路径&#x2F;文件夹名称</p><h1 id="3-基础"><a href="#3-基础" class="headerlink" title="3.基础"></a>3.基础</h1><h2 id="3-1-角色类"><a href="#3-1-角色类" class="headerlink" title="3.1 角色类"></a>3.1 角色类</h2><h3 id="3-1-1-改游戏模式-控制角色"><a href="#3-1-1-改游戏模式-控制角色" class="headerlink" title="3.1.1 改游戏模式 控制角色"></a>3.1.1 改游戏模式 控制角色</h3><p>世界场景设置—游戏模式重载<br>            —默认pawn类</p><h3 id="3-1-2-改人物摄像机"><a href="#3-1-2-改人物摄像机" class="headerlink" title="3.1.2 改人物摄像机"></a>3.1.2 改人物摄像机</h3><p>选择人物 使用ctrl+b或ctrl+e找到人物蓝图文件<br>改弹簧臂</p><h3 id="3-1-3-改默认人物移动参数"><a href="#3-1-3-改默认人物移动参数" class="headerlink" title="3.1.3 改默认人物移动参数"></a>3.1.3 改默认人物移动参数</h3><ol><li>行走：找到人物蓝图—组件—角色移动—最大行走速度</li><li>可行走地面角度：设置最大让他走的地面角度 列如你设置成60 那么你就可以走上去50度的台阶</li><li>跳跃高度：改跳跃z速度</li><li>空气控制：你跳起来在空中还能不能往 前&#x2F;后&#x2F;左&#x2F;右 移动 0为不能移动 1为行走下的最大速度移动</li><li>重力：设置重力标度大小 1就是正常地球重力 可调负数 改小就是太空那样的 如果改成0 就会直接起飞 根据牛一定律 任何物体都要保持匀速直线运动或静止状态，直到外力迫使它改变运动状态为止 如果你改成0了 那么就没有重力了 你跳跃将会一直飞 保持匀速直线运动状态<strong>是的 非常真实 牛顿表示很满意 牛顿的棺材板终于不动了</strong></li></ol><h2 id="3-2-物理系统"><a href="#3-2-物理系统" class="headerlink" title="3.2 物理系统"></a>3.2 物理系统</h2><p>选择一个物体 细节 物理 模拟物理<br>参数按需设置即可</p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/UNREAL-ENGINE/">UNREAL ENGINE</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/UNREAL-ENGINE-5-0/">UNREAL ENGINE 5.0</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/11/UNREALENGINE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo一些常见的问题</title>
      <link>https://blog.kcbpmbf.com/2022/08/HexoOther/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/HexoOther/</guid>
      <pubDate>Thu, 18 Aug 2022 05:25:26 GMT</pubDate>
      
      <description>&lt;article class=&quot;message is-warning&quot;&gt;&lt;div class=&quot;message-body&quot;&gt;
&lt;p&gt;Hexo搭建教程请&lt;a href=&quot;/2022/08/Hexo&quot;&gt;点击&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;&lt;strong&gt;温馨提示:手机端目录在最上面，三个杠图标的&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08HexoOther/&quot;&gt;1._config.yml 文件配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;2.在github上使用自己的域名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;3.创建,发布,删除文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;4.在文章中添加分类或标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;5.Hexo常用命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;6.Hexo主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;7.部署到Gitee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;8.Hexo插入图片&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;9.Markdown语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther&quot;&gt;10.百度、bing、谷歌收录问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;11.给Hexo添加目录Toc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;12.将hexo部署到vercel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;13.添加阅读更多按钮&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;14.单独自定义摘要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;15.修改部署到github没有更改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;16.为什么Cannot GET&amp;#x2F;tags&amp;#x2F;或Cannot GET&amp;#x2F;about&amp;#x2F;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2022/08/HexoOther/&quot;&gt;17.为什么访问这么慢&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<article class="message is-warning"><div class="message-body"><p>Hexo搭建教程请<a href="/2022/08/Hexo">点击</a> </p></div></article><p><strong>温馨提示:手机端目录在最上面，三个杠图标的</strong></p><ul><li><a href="/2022/08HexoOther/">1._config.yml 文件配置</a></li><li><a href="/2022/08/HexoOther/">2.在github上使用自己的域名</a></li><li><a href="/2022/08/HexoOther/">3.创建,发布,删除文章</a></li><li><a href="/2022/08/HexoOther/">4.在文章中添加分类或标签</a></li><li><a href="/2022/08/HexoOther/">5.Hexo常用命令</a></li><li><a href="/2022/08/HexoOther/">6.Hexo主题</a></li><li><a href="/2022/08/HexoOther/">7.部署到Gitee</a></li><li><a href="/2022/08/HexoOther/">8.Hexo插入图片</a></li><li><a href="/2022/08/HexoOther/">9.Markdown语法</a></li><li><a href="/2022/08/HexoOther">10.百度、bing、谷歌收录问题</a></li><li><a href="/2022/08/HexoOther/">11.给Hexo添加目录Toc</a></li><li><a href="/2022/08/HexoOther/">12.将hexo部署到vercel</a></li><li><a href="/2022/08/HexoOther/">13.添加阅读更多按钮</a></li><li><a href="/2022/08/HexoOther/">14.单独自定义摘要</a></li><li><a href="/2022/08/HexoOther/">15.修改部署到github没有更改</a></li><li><a href="/2022/08/HexoOther/">16.为什么Cannot GET&#x2F;tags&#x2F;或Cannot GET&#x2F;about&#x2F;</a></li><li><a href="/2022/08/HexoOther/">17.为什么访问这么慢</a><span id="more"></span></li></ul><h2 id="1-config-yml-文件配置"><a href="#1-config-yml-文件配置" class="headerlink" title="1._config.yml 文件配置"></a>1._config.yml 文件配置</h2><p>_config.yml 文件是您的Hexo博客的配置文件 更多可以查看</p><p><a href="https://blog.csdn.net/zemprogram/article/details/104288872">https://blog.csdn.net/zemprogram/article/details/104288872</a></p><p>或百度来参考他人的配置进行更改</p><h2 id="2-在github上使用自己的域名"><a href="#2-在github上使用自己的域名" class="headerlink" title="2.在github上使用自己的域名"></a>2.在github上使用自己的域名</h2><p>hexo博客默认是使用的GitHub 的子域名github.io 您也可以使用自己的域名 便于SEO（搜索优化）</p><ul><li>2.1 注册域名和解析<br>我们可以去腾讯云和阿里云注册域名，当然 别的地方也行<br><a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a> 腾讯云<br><a href="https://cn.aliyun.com/">https://cn.aliyun.com/</a> 阿里云</li></ul><p>注册完成后 找到域名控制台 如果自带解析请删除自带解析<br>添加新的解析<br>1.主机记录 填<code>@</code><br>2.记录类型 填<code>CNAME</code><br>3.记录值 填<code>博客网址（不带https://）</code><br>4.填完以上信息点保存</p><p>然后回到终端在博客根目录的source文件夹下新建一个名为CNANE的文件,里面写入您的域名<br><code>cd &amp;&amp; cd hexo &amp;&amp; cd source</code><br>这里使用nano编辑器进行编辑<br>您也可以根据自己的喜好来更改编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano CNANE</span><br></pre></td></tr></table></figure><p>里面写入您的域名 前面不加任何东西 比如 baidu.com 不要加www或其他的</p><ul><li><p>然后我们来到github 从左边 找到您的库 点击他 然后点最上面的Settings<br>往下拉 找到GitHub Pages 点蓝色的Check it out here!<br>然后往下拉 找到 Custom domain<br>填写您的域名 点Save（保存）</p></li><li><p>开启https（访问更安全）<br>还是刚刚的界面<br>勾选Enforce HTTPS选项即可<br>其他的 您可以找个带翻译的浏览器 看看其他选项</p></li></ul><h2 id="3-创建-发布-删除文章"><a href="#3-创建-发布-删除文章" class="headerlink" title="3.创建,发布,删除文章"></a>3.创建,发布,删除文章</h2><ul><li><p>创建文章<br>打开终端 进入hexo目录 输入<br><code>hexo new &quot;文章&quot;</code><br>即可创建文章，然后source&#x2F;_posts文件夹中会出现一个 文章.md 文件 用编辑器打开他就可以开始写文章了<br>这里仅仅简单介绍，关于更多的可以查看官方中文文档<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a> 或 <a href="https://www.jianshu.com/p/265$">https://www.jianshu.com/p/265$</a></p></li><li><p>发布文章</p><p>打开终端 输入 <code>hexo g &amp;&amp; hexo d</code></p><p>输入名字和您的令牌 等待输出INFO  Deploy done: git 即可发布成功</p></li><li><p>删除文章</p><p>删除您source文件夹中的md文件即可，然后更新到github</p><p><code>hexo g &amp;&amp; hexo d</code></p></li><li><p>新建导航选项页界面(就是about关于等界面)</p><p><code>hexo new page 导航选项页文件名</code></p></li></ul><p>然后source下就有对应的文件夹 比如 hexo new page about 则就有source&#x2F;about文件夹 打开有.md文件进行编辑即可</p><h2 id="4-在文章中添加分类或标签"><a href="#4-在文章中添加分类或标签" class="headerlink" title="4.在文章中添加分类或标签"></a>4.在文章中添加分类或标签</h2><ul><li><p>分类<br>一篇文章只能有一个分类，如果添加了多个分类，则下一个分类为子分类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- 分类（第一层）</span><br><span class="line">- 子分类（第二层）</span><br></pre></td></tr></table></figure></li><li><p>标签<br>一篇文章可以有多个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">- 标签</span><br><span class="line">- 标签1</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-Hexo常用命令"><a href="#5-Hexo常用命令" class="headerlink" title="5.Hexo常用命令"></a>5.Hexo常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;name&quot;</span>       <span class="comment"># 新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;name&quot;</span>  <span class="comment"># 新建页面</span></span><br><span class="line">hexo g                <span class="comment"># 生成页面</span></span><br><span class="line">hexo d                <span class="comment"># 部署</span></span><br><span class="line">hexo g -d             <span class="comment"># 生成页面并部署</span></span><br><span class="line">hexo s                <span class="comment"># 本地预览</span></span><br><span class="line">hexo clean            <span class="comment"># 清除缓存和已生成的静态文件</span></span><br><span class="line">hexo <span class="built_in">help</span>             <span class="comment"># 帮助</span></span><br></pre></td></tr></table></figure><h2 id="6-Hexo主题"><a href="#6-Hexo主题" class="headerlink" title="6.Hexo主题"></a>6.Hexo主题</h2><p>您可以去github和网上找一些主题 然后根据主题文档来进行更换主题</p><ul><li>为博客添加网站统计等等<br>查看主题文档</li></ul><h2 id="7-部署到Gitee"><a href="#7-部署到Gitee" class="headerlink" title="7.部署到Gitee"></a>7.部署到Gitee</h2><p>因为Github的访问很慢 他的服务器在国外 我们可以把他挪到gitee<br>gitee是国内的<br><a href="https://gitee.com/">https://gitee.com/</a> 官网 注册一个账号</p><p>注册完成后<br>1.点开右上角头像旁边加号 点 从github&#x2F;gitLab导入仓库<br>2.选择从url导入<br>3.复制您的github博客地址过来填入，注意不是访问地址，是你仓库地址<br><a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%94%A8%E6%88%B7%E5%90%8D.github.io">https://github.com/用户名/用户名.github.io</a><br>4.仓库名称为您的用户名<br>5.路径自动填 不用管<br>6.点击导入<br>7.等待同步完成 同步完成后 会自动跳转<br>然后往右边看有个服务点击 展开找到gitee pages 如果你是新用户的话 得实名<br>8.勾选强制https 点击启动即可<br><strong>注意Gitee不支持自动更新 每次hexo d上传到github的时候需要登录gitee手动点击更新</strong></p><ul><li>Gitee暂时不可使用个性化域名<br>21年11月13日晚上23：55 查询官方文档<br>因业务调整，Gitee Pages Pro 暂时关闭个人用户购买入口，已开通用户的仓库不受影响。GVP 项目和付费企业使用不受影响$</li></ul><h2 id="8-Hexo插入图片"><a href="#8-Hexo插入图片" class="headerlink" title="8.Hexo插入图片"></a>8.Hexo插入图片</h2><ul><li>安装插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><a href="https://www.cnblogs.com/gispathfinder/p/12239390.html">https://www.cnblogs.com/gispathfinder/p/12239390.html</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">修改_config.yml把post_asset_folder选项从<span class="literal">false</span>改成<span class="literal">true</span></span><br><span class="line">打开/node_modules/hexo-asset-image/index.js文件</span><br><span class="line">把var endPos = link.lastIndexOf(<span class="string">&#x27;.&#x27;</span>);修改成var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);即可</span><br><span class="line">就是这样的</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">      var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">post_asset_folder 设置为<span class="literal">true</span>后功能开启，每次使用命令hexo new &lt;title&gt; 创建新的博客文章时，在文章的统一目录下会&gt;$</span><br><span class="line">先将需要插入的图片放在同名文件夹中，再按照 markdown 语法来插入图片即可</span><br><span class="line">![Alt text](path)</span><br><span class="line"></span><br><span class="line">比如 我放了一个叫1.jpg的图片放到了文件夹中</span><br><span class="line">引用则是</span><br><span class="line">![图片](1.jpg)</span><br></pre></td></tr></table></figure>您也可以使用图床，然后用链接插入图片</li></ul><h2 id="9-Markdown语法"><a href="#9-Markdown语法" class="headerlink" title="9.Markdown语法"></a>9.Markdown语法</h2><p>.md即markdown文件的基本常用编写语法 就是你写博文的时候用的语法<br><a href="https://www.jianshu.com/p/399e5a3c7cc5">https://www.jianshu.com/p/399e5a3c7cc5</a></p><h2 id="10-百度、bing、谷歌收录问题"><a href="#10-百度、bing、谷歌收录问题" class="headerlink" title="10.百度、bing、谷歌收录问题"></a>10.百度、bing、谷歌收录问题</h2><p>正在创作</p><h2 id="11-给Hexo添加目录Toc"><a href="#11-给Hexo添加目录Toc" class="headerlink" title="11.给Hexo添加目录Toc"></a>11.给Hexo添加目录Toc</h2><p><a href="https://blog.kcbpmbf.com/2022/08/HexoToc">请点击查看</a><br><a href="https://zhuanlan.zhihu.com/p/474967971">解决Hexo建站使用toc目录跳转undefined的问题</a></p><h2 id="12-将hexo部署到vercel"><a href="#12-将hexo部署到vercel" class="headerlink" title="12.将hexo部署到vercel"></a>12.将hexo部署到vercel</h2><p><a href="https://zhuanlan.zhihu.com/p/347990778">https://zhuanlan.zhihu.com/p/347990778</a></p><h2 id="13-添加阅读更多按钮"><a href="#13-添加阅读更多按钮" class="headerlink" title="13.添加阅读更多按钮"></a>13.添加阅读更多按钮</h2><p>默认的话 博客是在主页会显示全文 看起来很别扭<br>您可以在文章中插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>只显示该代码前面的内容 剩下的则变成阅读更多按钮</p><h2 id="14-单独自定义摘要"><a href="#14-单独自定义摘要" class="headerlink" title="14.单独自定义摘要"></a>14.单独自定义摘要</h2><ul><li>摘要<br>在你的文章中添加<code>&lt;!-- more --&gt;</code>标签。 标签前面的文章内容会被标记为摘要，而其后的内容不会显示在文章列表上。<br>你也可以在文章的front-matter中设置自定义摘要。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 一篇文章</span><br><span class="line"><span class="built_in">date</span>: 2020-01-01</span><br><span class="line">excerpt: 这是一篇关于...</span><br><span class="line">---</span><br><span class="line"><span class="comment"># 文章内容...</span></span><br></pre></td></tr></table></figure>其中的excerpt就是摘要<br><a href="https://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#more">来源</a></li></ul><h2 id="15-修改部署到github没有更改"><a href="#15-修改部署到github没有更改" class="headerlink" title="15.修改部署到github没有更改"></a>15.修改部署到github没有更改</h2><p>使用<code>hexo clean</code>清理缓存和已经生成的静态文件<br>然后使用<code>hexo g</code>重新生成<br>使用<code>hexo d</code>重新部署</p><h2 id="16-为什么Cannot-GET-x2F-tags-x2F-或Cannot-GET-x2F-about-x2F"><a href="#16-为什么Cannot-GET-x2F-tags-x2F-或Cannot-GET-x2F-about-x2F" class="headerlink" title="16.为什么Cannot GET &#x2F;tags&#x2F;或Cannot GET &#x2F;about&#x2F;"></a>16.为什么Cannot GET &#x2F;tags&#x2F;或Cannot GET &#x2F;about&#x2F;</h2><p>没有生成导航选项页界面 翻阅上文</p><h2 id="17-为什么访问这么慢"><a href="#17-为什么访问这么慢" class="headerlink" title="17.为什么访问这么慢"></a>17.为什么访问这么慢</h2><ul><li>为什么访问这么慢<br>因为是Github他的服务器在外国<br>可以把他同步到国内的Gitee 翻阅上文<br>为什么不使用Coding Pages啊 我看网上好多教程都使用Coding Pages<br>2020年的时候 要钱了 具体请百度</li></ul>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Hexo/">Hexo</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Hexo/">Hexo</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/HexoOther/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo搭建教程</title>
      <link>https://blog.kcbpmbf.com/2022/08/Hexo/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/Hexo/</guid>
      <pubDate>Thu, 18 Aug 2022 03:16:41 GMT</pubDate>
      
      <description>&lt;article class=&quot;message is-info&quot;&gt;&lt;div class=&quot;message-body&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.kcbpmbf.com/2021/10/Termuxhexo/&quot;&gt;这篇文章(点击查看)&lt;/a&gt;同时适用于其他的Linux发行版本，不止是Termux，您也可以在您的电脑上使用deepin或Ubuntu进行操作 前提要求是您需要在您的系统上安装好nodejs git 下面是各系统安装命令&lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&quot;安装nodejs-git命令&quot;&gt;&lt;a href=&quot;#安装nodejs-git命令&quot; class=&quot;headerlink&quot; title=&quot;安装nodejs git命令&quot;&gt;&lt;/a&gt;安装nodejs git命令&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<article class="message is-info"><div class="message-body"><p><a href="https://blog.kcbpmbf.com/2021/10/Termuxhexo/">这篇文章(点击查看)</a>同时适用于其他的Linux发行版本，不止是Termux，您也可以在您的电脑上使用deepin或Ubuntu进行操作 前提要求是您需要在您的系统上安装好nodejs git 下面是各系统安装命令</p></div></article><h2 id="安装nodejs-git命令"><a href="#安装nodejs-git命令" class="headerlink" title="安装nodejs git命令"></a>安装nodejs git命令</h2><span id="more"></span><h2 id="Debian系"><a href="#Debian系" class="headerlink" title="Debian系"></a>Debian系</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nodejs git-core</span><br></pre></td></tr></table></figure><h2 id="Arch系"><a href="#Arch系" class="headerlink" title="Arch系"></a>Arch系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git nodejs</span><br></pre></td></tr></table></figure><h2 id="Redhat系"><a href="#Redhat系" class="headerlink" title="Redhat系"></a>Redhat系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git-core</span><br></pre></td></tr></table></figure><p><a href="https://nodejs.org/">nodejs</a></p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Hexo/">Hexo</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Hexo/">Hexo</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/Hexo/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>给你的linux mv cp命令添加进度显示</title>
      <link>https://blog.kcbpmbf.com/2022/08/linux-cp-mv/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/linux-cp-mv/</guid>
      <pubDate>Thu, 18 Aug 2022 02:52:37 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;我们可以用Github 上的开源项目 &lt;a href=&quot;https://github.com/jarun/advcpmv&quot;&gt;advcpmv&lt;/a&gt; 来实现 Linux mv cp命令显示进度&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>我们可以用Github 上的开源项目 <a href="https://github.com/jarun/advcpmv">advcpmv</a> 来实现 Linux mv cp命令显示进度</p><span id="more"></span><h2 id="2-原理"><a href="#2-原理" class="headerlink" title="2.原理"></a>2.原理</h2><p>mv cp命令属于<code>coreutils</code><br><strong>coreutils</strong>是GNU下的一个软件包，提供了常用的核心工具集，简单来说就是提供了linux基础常用命令，比如ls mv cp 命令，一般系统是默认安装的<br>我们要给coreutils打个补丁然后重新编译并安装他，以此实现进度条显示</p><h2 id="3-教程"><a href="#3-教程" class="headerlink" title="3.教程"></a>3.教程</h2><h3 id="3-1-自动安装（推荐）"><a href="#3-1-自动安装（推荐）" class="headerlink" title="3.1 自动安装（推荐）"></a>3.1 自动安装（推荐）</h3><p>自动安装更加方便，仅需执行一行命令即可，还可以自动下载最新版的，不用操心版本问题<br>执行命令前，请确保你开启了梯子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/jarun/advcpmv/master/install.sh --create-dirs -o ./advcpmv/install.sh &amp;&amp; (<span class="built_in">cd</span> advcpmv &amp;&amp; sh install.sh)</span><br></pre></td></tr></table></figure><p>然后我们就可以在使用cp&#x2F;mv命令的时候加上-g参数就能显示进度条了<br>如果你想每次使用cp&#x2F;mv命令的时候不加-g 且每次都想要查看进度的话<br>那么可以在<code>.bashrc</code>上加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -ig&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -ig&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-手动安装"><a href="#3-2-手动安装" class="headerlink" title="3.2 手动安装"></a>3.2 手动安装</h3><p><strong>注：如果您看到此篇文章已经是很久了，那么请访问<code>http://ftp.gnu.org/gnu/coreutils</code>查看最新版本，并替换版本号</strong><br>下载新的coreutils</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz</span><br></pre></td></tr></table></figure><p>解压coreutils-9.1.tar.xz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvpf coreutils-9.1.tar.xz</span><br></pre></td></tr></table></figure><p>移动到解压完后的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> coreutils-9.1</span><br></pre></td></tr></table></figure><p>下载github上的补丁文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/jarun/advcpmv/blob/master/advcpmv-0.9-9.1.patch</span><br></pre></td></tr></table></figure><p>打补丁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch -p1 -i advcpmv-0.9-9.1.patch</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先执行</span></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再执行</span></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>把打好补丁的文件复制到bin目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> src/cp /usr/local/bin/cp</span><br><span class="line">sudo <span class="built_in">cp</span> src/mv /usr/local/bin/mv</span><br></pre></td></tr></table></figure><p>然后我们就可以在使用cp&#x2F;mv命令的时候加上-g参数就能显示进度条了<br>如果你想每次使用cp&#x2F;mv命令的时候不加-g 且每次都想要查看进度的话<br>那么可以在<code>.bashrc</code>上加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -ig&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -ig&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="4-效果"><a href="#4-效果" class="headerlink" title="4.效果"></a>4.效果</h2><p><img src="https://pic.imgdb.cn/item/63025b4d16f2c2beb1937cc1.png" alt="图片"><br>第一行进度条为总进度<br>第二行进度条为当前文件进度</p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Linux/">Linux</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/linux-cp-mv/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Termux手动配置lnmp环境</title>
      <link>https://blog.kcbpmbf.com/2022/08/Termuxlnmp/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/Termuxlnmp/</guid>
      <pubDate>Thu, 18 Aug 2022 02:50:10 GMT</pubDate>
      
      <description>&lt;article class=&quot;message is-success&quot;&gt;&lt;div class=&quot;message-body&quot;&gt;
&lt;p&gt;此篇文章同时适用于其他的Linux发行版本，不止是Termux，您也可以在树莓派上进行操作，前提要求是，把命令替换为您系统对应的命令，包括但不限于软件安装命令，系统文件路径&lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;lnmp是简写，全称为linux+Nginx+mysql或MariaDB+php&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L指linux，就是操作系统&lt;/li&gt;
&lt;li&gt;N是指Nginx，是高性能的 HTTP 和反向代理的web服务器，简单来说就是前端用他运行，前端就是页面，你访问网站看到的页面&lt;/li&gt;
&lt;li&gt;M是指MySQL或MariaDB，是一个关系型数据库管理系统，这里的关系型，我们就不做解释了，感兴趣的可以&lt;a href=&quot;https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/8999831&quot;&gt;看这里&lt;/a&gt;，mysql简单来说就是数据库，用来存储数据,MariaDB也是数据库，他是mysql的一个分支，具体差异和这其中的故事请&lt;a href=&quot;https://baike.baidu.com/item/mariaDB/6466119&quot;&gt;查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;P是指PHP，PHP: Hypertext Preprocessor 即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。简单来说就是网页编程语言&lt;br&gt;&lt;strong&gt;温馨提示：外国人把这一套叫做lemp，搜英文资料需要搜lemp&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/huobobo124/article/details/52971479&quot;&gt;lnmp工作原理&lt;/a&gt;&lt;br&gt;我们将把这一套服务，手动配置在Termux上&lt;/li&gt;&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<article class="message is-success"><div class="message-body"><p>此篇文章同时适用于其他的Linux发行版本，不止是Termux，您也可以在树莓派上进行操作，前提要求是，把命令替换为您系统对应的命令，包括但不限于软件安装命令，系统文件路径</p></div></article><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>lnmp是简写，全称为linux+Nginx+mysql或MariaDB+php</p><ul><li>L指linux，就是操作系统</li><li>N是指Nginx，是高性能的 HTTP 和反向代理的web服务器，简单来说就是前端用他运行，前端就是页面，你访问网站看到的页面</li><li>M是指MySQL或MariaDB，是一个关系型数据库管理系统，这里的关系型，我们就不做解释了，感兴趣的可以<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/8999831">看这里</a>，mysql简单来说就是数据库，用来存储数据,MariaDB也是数据库，他是mysql的一个分支，具体差异和这其中的故事请<a href="https://baike.baidu.com/item/mariaDB/6466119">查看</a></li><li>P是指PHP，PHP: Hypertext Preprocessor 即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。简单来说就是网页编程语言<br><strong>温馨提示：外国人把这一套叫做lemp，搜英文资料需要搜lemp</strong><br><a href="https://blog.csdn.net/huobobo124/article/details/52971479">lnmp工作原理</a><br>我们将把这一套服务，手动配置在Termux上<span id="more"></span></li></ul><h2 id="2-安装所需软件"><a href="#2-安装所需软件" class="headerlink" title="2.安装所需软件"></a>2.安装所需软件</h2><p>我们要先把Termux换成国内源，以便更快速的下载软件（已换源的可以忽略这一步）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.bfsu.edu.cn/termux/apt/termux-main stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list &amp;&amp; apt update &amp;&amp; apt upgrade</span><br></pre></td></tr></table></figure><p>然后我们安装Nginx mariadb php-fpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx mariadb php-fpm</span><br></pre></td></tr></table></figure><p>注：如果您是其他linux用户的话，请不要直接执行上述命令，请百度查看您系统的对应命令</p><h2 id="3-配置环境"><a href="#3-配置环境" class="headerlink" title="3.配置环境"></a>3.配置环境</h2><h3 id="3-1-MariaDB"><a href="#3-1-MariaDB" class="headerlink" title="3.1 MariaDB"></a>3.1 MariaDB</h3><p>首先 我们启动mariadb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> mysqld &amp;</span><br></pre></td></tr></table></figure><p>nohup 英文全称<strong>no hang up（不挂起）</strong>，用于在系统后台不挂断地运行命令，如果你直接运行mysqld命令的话，他则会占用你一个终端，不能执行其他命令，所以把他放到后台运行。</p><p>Termux安装Maridb的话默认是包含<code>两个用户</code>的，一个是当前用户也就是whoami,另一个则是root，但是我们不能直接登录root，所以我们要以当前用户登录，然后配置一下root用户。</p><p>执行以下命令登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u $(<span class="built_in">whoami</span>)</span><br></pre></td></tr></table></figure><p>如果您如下图所示，那么是就登录成功了<br><img src="https://pic.imgdb.cn/item/6301dade16f2c2beb14f8947.jpg" alt="登录成功"><br>然后我们执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用当前数据库</span></span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置root账户的密码</span></span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> = password(<span class="string">&#x27;root账号的密码&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新maridb的系统权限相关表</span></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line">quit; </span><br></pre></td></tr></table></figure><p>一条一条的执行，执行完毕后<br>我们就可以使用如下命令登录root账号了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="3-2-Nginx"><a href="#3-2-Nginx" class="headerlink" title="3.2 Nginx"></a>3.2 Nginx</h3><p>首先，使用编辑器打开以下路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$PREFIX</span>/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>找到第45行<br>是这个样子的<br><img src="https://pic.imgdb.cn/item/6301dfbd16f2c2beb151b1cc.jpg" alt="图片"><br>我们把<code>index.php</code>添加到index.htm的后面，就像这样<br><img src="https://pic.imgdb.cn/item/6301e17516f2c2beb152a06a.jpg" alt="图片"><br>这一步是为了把index.php添加成默认首页<br>然后往下翻，找到第69行，把SCRIPT_FILENAME后面的字全部删了，改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/data/com.termux/files/usr/share/nginx/html<span class="variable">$fastcgi_script_name</span>;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6301e38d16f2c2beb153a88a.jpg" alt="图片"><br>然后再把65行到71行的**#**全部删掉<br><img src="https://pic.imgdb.cn/item/6301e42b16f2c2beb153ec12.jpg" alt="删完后的样子"></p><h3 id="3-3-php-fpm"><a href="#3-3-php-fpm" class="headerlink" title="3.3 php-fpm"></a>3.3 php-fpm</h3><p>PHP-FPM(PHP FastCGI Process Manager)意：PHP FastCGI 进程管理器，<strong>注意，他只是管理器，用于管理PHP 进程池的软件</strong>，用于接受web服务器的请求。</p><p>Nginx只是一个web服务器，<strong>他不能处理php的请求</strong>，所以当Nginx收到关于php的请求时，则需要发给php-fpm处理，php-fpm则在发给php-fastcgi处理</p><p>注：php-fastcgi 只是一个cgi程序,只会解析php请求，并且返回结果，不会管理(因此才出现的php-fpm)。</p><p>更多关于php-fpm请查看<a href="https://www.cnblogs.com/followyou/p/9460058.html">博客园 by walkingSun</a>和<a href="https://zhuanlan.zhihu.com/p/110540192">知乎php架构师</a>更多内容请百度</p><p>使用编辑软件编辑以下文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$PREFIX</span>/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure><p>往下翻，找到在第36行<code>listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock</code>把他改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = 127.0.0.1:9000</span><br></pre></td></tr></table></figure><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h2><h3 id="4-1-测试Nginx"><a href="#4-1-测试Nginx" class="headerlink" title="4.1 测试Nginx"></a>4.1 测试Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><h3 id="4-2-测试php解析"><a href="#4-2-测试php解析" class="headerlink" title="4.2 测试php解析"></a>4.2 测试php解析</h3><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;?php phpinfo(); ?&gt;&#x27;</span> &gt; <span class="variable">$PREFIX</span>/share/nginx/html/1.php</span><br></pre></td></tr></table></figure><p>然后启动Nginx和php-fpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx &amp;&amp; php-fpm</span><br></pre></td></tr></table></figure><p>然后访问<code>http://127.0.0.1:8080/1.php</code>如果和下面的图一样那么就是可以正常解析了<br><img src="https://pic.imgdb.cn/item/6302251716f2c2beb177a68c.png" alt="图片"></p><h2 id="5-温馨提示"><a href="#5-温馨提示" class="headerlink" title="5.温馨提示"></a>5.温馨提示</h2><p>Termux默认网站根目录路径为<code>/data/data/com.termux/files/usr/share/nginx/html</code><br>当您关闭过termux，发现访问不了了，请依次启动Nginx,php-fpm,MariaDB<br><strong>Nginx启动命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><p><strong>停止命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop 或 nginx -s quit</span><br></pre></td></tr></table></figure><p>Quit is a graceful shutdown. Nginx finishes serving the open connections before shutdown<br>Quit 是一个优雅的关闭方式，Nginx在退出前完成已经接受的连接请求。<br>Stop is a quick shutdown where is terminates in between serving the connection<br>Stop 是快速关闭，不管有没有正在处理的请求。<br><a href="http://wiki.nginx.org/CommandLine">http://wiki.nginx.org/CommandLine</a><br><strong>php-fpm启动&#x2F;关闭命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">php-fpm</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">pkill php-fpm</span><br></pre></td></tr></table></figure><p><strong>MariaDB启动&#x2F;停止命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="built_in">nohup</span> mysqld &amp; 或 mysqld &amp;</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">pkill mysqld</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Termux/">Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/Linux/">Linux</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/lnmp/">lnmp</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/Termuxlnmp/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>web1.0 2.0 3.0区别</title>
      <link>https://blog.kcbpmbf.com/2022/08/web123/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/web123/</guid>
      <pubDate>Sun, 14 Aug 2022 07:51:58 GMT</pubDate>
      
      <description>&lt;p&gt;说明：此篇文章是一个随笔，文章中大部分词句段都是从网络上复制，集合，排序，形成的此文章&lt;br&gt;这篇文章最早是在笔记软件里写完的 已经写完很长时间了&lt;/p&gt;
&lt;p&gt;因文章大部分都是复制 而且写完已经有很长时间了 此文章中的词句段都找不到链接了&lt;/p&gt;
&lt;p&gt;所以就不引用来源链接了&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>说明：此篇文章是一个随笔，文章中大部分词句段都是从网络上复制，集合，排序，形成的此文章<br>这篇文章最早是在笔记软件里写完的 已经写完很长时间了</p><p>因文章大部分都是复制 而且写完已经有很长时间了 此文章中的词句段都找不到链接了</p><p>所以就不引用来源链接了</p><span id="more"></span><!-- toc --><h1 id="web1-0"><a href="#web1-0" class="headerlink" title="web1.0"></a>web1.0</h1><p>网站是<code>别人的网站</code></p><p>Web 1.0是一个返璞词，指的是万维网发展的第一阶段，时间大约从1991年到2004年。根据科莫德和克里希纳穆绥的说法，“<strong>在Web 1.0中，内容创作者很少，绝大多数用户只是内容的消费者。</strong></p><p>web1.0很单纯 就是提供信息 让人们看</p><p>以内容为核心，网站负责提供各种内容 (新闻、小说、视频等等) 吸引用户，用户主要是找到自己感兴趣的内容后较被动地接受信息。</p><p>从<code>知识生产</code>的角度看，WEB1.0的任务，是将以前没有放在网上的人类知识，通过商业的力量，放到网上去。</p><p>从<code>内容产生者</code>角度看，WEB1.0是商业公司为主体把内容往网上搬，</p><p>web1.0是<strong>网站单项信息发布的模式</strong></p><p>Web1.0:用户只是<strong>浏览者</strong>、以内容为中心、广播化；精英文化。</p><p><strong>web1.0简单来说就是是站长发布信息 而用户只能观看 用户只是互联网的浏览者 读者</strong></p><h1 id="web2-0"><a href="#web2-0" class="headerlink" title="web2.0"></a>web2.0</h1><p>Web 2.0（也称为参与式网络[1]或社交网络[2]），指以最终用户为目标，强调用户生成内容、易用性、参与文化和互操作性（如：与其它产品、系统和设备兼容）的网站。</p><p><strong>Web2.0的发展在互联网上的每一个用户不再仅仅是互联网的读者，同时也成为互联网的作者。在模式上由简单“读”向“写”以及“共同建设”发展；由被动地接收互联网信息向主动创造互联网信息发展，从而更加人性化！</strong></p><p>web2.0网站的内容<strong>通常是用户发布的</strong>，<strong>使得用户既是网站内容的浏览者也是网站内容的制造者</strong>，这也就意味着web2.0网站为用户提供了更多参与的机会，例如博客网站和wiki就是典型的用户创造内容的指导思想，而tag技术（用户设置标签）将传统网站中的信息分类工作直接交给用户来完成。</p><p>Web2.0是相对于Web1.0的新的时代。指的是一个利用Web的平台，<code>由用户主导而生成的内容互联网产品模式</code></p><p><strong>Web 2.0网站允许用户作为虚拟社区中用户生成内容的创建者</strong>，并通过社交媒体的对话进行交互和协作。<em>这与第一代网络（Web 1.0）时代的网站形成了对比</em>，在Web 1.0时代，人们只能被动地浏览内容。Web 2.0功能的示例，包括：社交网站或社交媒体站点(如：Facebook)、博客、Wiki、分众分类法（在网站和链接上的关键词“标签”）、视频分享网站（如：YouTube）、托管服务、网络应用程序（“app”）、协同消费平台和混搭应用程序</p><p>“Web 2.0”：之所以加引号，<strong>因为毕竟没有所谓的 “Web 2.0 标准”</strong>。在广泛的共识中，Web 2.0 以用户为核心，用户自己共享内容 (User-generated content，比如发表微博、博客文章、podcast、上传视频、图片到 Youtube、Flickr 等等)，Web 服务商提供各类 Web 应用来承载用户的内容、组织他们之间的交互。相比传统 Web，Web 2.0 的各种服务更专注于用户，提供更好的交互体验，同时各种服务商提供不同的开放 API，使得一些个性化 Web 应用的实现成为可能</p><p>泰瑞·弗莱在他的《新媒体（第三版）》中，将<em><strong>Web 1.0和Web 2.0之间的区别描述为</strong></em></p><p><strong>“从个人网站变为博客和博客网站聚合，从发布变为参与，网络内容从作为前期投资的结果变为正在进行的交互过程，以及从内容管理系统变为基于“标签”网站内容的链接使用的关键字（分众分类法）的迁移。</strong></p><p><strong>简单来说就是从浏览者变成了创造者</strong> <strong>web2.0就是去中心化 让网民提供信息</strong></p><p>关于web1.0和2.0的区别，吕欣欣的一番比较，”web1.0天天谈门户，web2.0谈个人化；web1.0谈内容，web2.0谈应用；web1.0商业模式，web2.0谈服务；web1.0谈密闭、大而全，web2.0大家谈开放、谈联合；web1.0网站中心化，web2.0谈个人中心化；web1.0一对一，web2.0谈社会性网络；web1.0不知道你是狗，web2.0你去年夏天干了什么我一清二楚甚至想要干什么呢。。。”</p><h1 id="web3-0"><a href="#web3-0" class="headerlink" title="web3.0"></a>web3.0</h1><p>web3.0也叫web3</p><p>有与区块链有关的web3概念</p><p>也有web2.0有关的web3.0</p><p>而这里说的都是<strong>web2.0有关的web3.0</strong></p><p>Web 3.0”：<strong>应该说 Web 3.0 这个说法究竟指什么还没能得到广泛的共识，大家对其定义有很多不同的理解</strong></p><p>web3.0在维基上的解释也很模糊 他指的东西很多</p><p>我在这里简单阐述一下我对3.0的理解，假如说web1.0的本质是联合，那么web2.0的本质就是互动，它让网民更多地参与信息产品的创造、传播和分享，而这个过程是<strong>有价值的</strong>。web2.0的缺点是没有体现出网民劳动的价值，所以2.0很脆弱，缺乏商业价值。web2.0是脆弱的，纯粹的2.0 会在商业模式上遭遇重大挑战，需要跟具体的产业结合起来才会获得巨大的商业价值和商业成功。<strong>web3.0是在web2.0的基础上发展起来的能够更好地体现网民的劳动价值，并且能够实现价值均衡分配的一种互联网方式。</strong></p><p>总体而言，<strong>web3.0更多的不是仅仅一种技术上的革新</strong>。而是以<strong>统一的通讯协议</strong>，通过更加简洁的方式为用户提供更为个性化的互联网信息资讯定制的一种技术整合。将会是互联网发展中由技术创新走向用户理念创新的关键一步。</p><p>web3.0跟web2.0一样，仍然不是技术的创新，<strong>而是思想的创新</strong>，进而指导技术的发展和应用。web3.0之后将催生新的王国，这个王国不再以地域和疆界进行划分，而是以兴趣、语言、主题、职业、专业进行聚集和管理的王国。到时候真可谓是“皇帝轮流做，明年到我家”，你有机会打造出一个新的互联网王国而成为一个国王，也有可能会在互联网王国的民主竞选中成为总统，到时，你将拥有来自地球各个角落的网络公民。</p><p><em><strong>其实说到这里，很多人应该已经看出来，没有什么所谓的2.0、3.0，因为你没法准确的界定他是什么样的应用，也没法界定它是什么时候开始的，什么时候结束，它只是互联网本身发展的一种趋势。</strong></em></p><p>web3.0他指很多东西 比如大数据 人工智能 虚拟世界</p><p>关于如何定义Web 3.0，及其所代表的含义的争论非常激烈，观点也琳琅满目</p><p>例如有人是针对Web 2.0提出Web 3.0，<strong>该词包含多层含义</strong>，用来概括互联网发展过程中可能出现的各种不同的方向和特征，包括：将互联网本身转化为一个泛型数据库；跨浏览器、超浏览器的内容投递和请求机制；人工智能技术的运用；语义网；地理映射网；运用3D技术搭建的网站甚至虚拟世界或网路公国等。</p><p>可以说Web3.0是三广+三跨（广域的 广语的 广博的 跨区域 跨语种 跨行业）</p><h2 id="关于web3的特征"><a href="#关于web3的特征" class="headerlink" title="关于web3的特征"></a>关于web3的特征</h2><p>有效聚合</p><p>普适性和数字新技术（比2.0有点改变）垂直网站</p><p>营销新模式</p><p>web2.0对所有的网络营销研究者来说并不陌生，但是随着web2.0的不断应用，web3.0已经悄然兴起，现在人们对web3.0还没有权威的定义，但是从现在的发展来看，人们总结了web3.0的主要特征:</p><p>1、Web 3.0时代的网络访问速度会非常快；</p><p>2、Web 3.0时代的网站会更加开放，对外提供自己的API将会是网站的标准配置；</p><p>3、Web 3.0时代的信息关联通过语义来实现，信息的可搜索性将会达到一个新的高度。</p><p><strong>以上这些内容请访问</strong><a href="https://baike.baidu.com/item/web3.0/4873257">百度百科</a><strong>查看 这里就不进行粘贴了</strong></p><p><strong>web1.0：网络-人（单向信息，只读，eg个人网站，大英百科全书）</strong></p><p><strong>web2.0：人-人（以网络为沟通渠道进行人与人沟通，eg维基、博客）</strong></p><p><strong>web3.0：人-网络-人（人工智能、关联数据和语义网络构建，形成人和网络以及网络与人的沟通，同时在SEO支持下，提高人与人沟通的便利性）</strong></p><p><strong>对三者的区别在于三个时期中网络的角色——web1.0网络是信息提供者，单向性的提供和单一性理解</strong></p><p><strong>web2.0网络是平台，用户提供信息，通过网络，其他用户获取信息</strong></p><p><strong>web3.0网络成为用户需求理解者和提供者，网络对用户了如指掌，知道用户有什么、要什么以及行为习惯，进行资源筛选、智能匹配，直接给用户答案。</strong></p><h2 id="真相"><a href="#真相" class="headerlink" title="真相"></a>真相</h2><p><em><strong>没有什么所谓的2.0、3.0，因为你没法准确的界定他是什么样的应用，也没法界定它是什么时候开始的，什么时候结束，它只是互联网本身发展的一种趋势。</strong></em></p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/%E9%9A%8F%E7%AC%94/">随笔</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/web/">web</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/%E9%9A%8F%E7%AC%94/">随笔</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/web123/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo添加目录(Toc)</title>
      <link>https://blog.kcbpmbf.com/2022/08/HexoToc/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/HexoToc/</guid>
      <pubDate>Sat, 13 Aug 2022 12:47:16 GMT</pubDate>
      
      <description>&lt;p&gt;注:有的主题自带目录插件（Toc）那么就不能使用此方法 只适用主题无自带的目录&lt;br&gt;此插件也不能和边栏Toc同时使用 如果你有边栏Toc 那么请从删除其中一个&lt;br&gt;此插件为文章插入的toc 效果如下&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>注:有的主题自带目录插件（Toc）那么就不能使用此方法 只适用主题无自带的目录<br>此插件也不能和边栏Toc同时使用 如果你有边栏Toc 那么请从删除其中一个<br>此插件为文章插入的toc 效果如下</p><span id="more"></span><p>@[TOC]</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p>首先我们执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-toc --save</span><br></pre></td></tr></table></figure><p>如果您使用的是默认源下载很慢，那么请更换为国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com </span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><p>安装完成后<br>在博客根目录下的 _config.yml添加如下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">toc:</span><br><span class="line">  maxDepth: 3</span><br></pre></td></tr></table></figure><p>即可<br>这里maxdepth的意思为<br>maxdepth：使用深度最大为 maxdepth 的标题<br>原文<code>maxdepth: Use headings whose depth is at most maxdepth.</code><br>注：此结果是谷歌翻译<br>如果您有更多需要<br>添加其他的参数的话<br>请看<a href="https://github.com/bubkoo/hexo-toc">GitHub</a><br>这里是谷歌翻译各项参数结果<br>maxdepth：使用深度最大为 maxdepth 的标题。<br>class：目录的 CSS 类。 （默认为关）<br>slugify：选择您要使用的 slugify 功能。 目前支持uslug（默认）和音译。<br>decodeEntities：选择是否启用解码实体。 （默认为关，请参阅#15）。<br>锚点：每个标题是否应该有一个锚点。 （默认为关）<br>位置：锚应该在哪里，标题，或者标题。 （默认为afterbeforeafter）；<br>符号：您希望锚点是哪个符号。 （默认为#）；<br>style：锚的 CSS 类，（默认为 header-anchor）；</p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h2><p>在文章您想添加目录的位置输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- toc --&gt;</span><br></pre></td></tr></table></figure><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h2><p><a href="https://zhuanlan.zhihu.com/p/474967971">解决Hexo建站使用toc目录跳转undefined的问题</a></p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Hexo/">Hexo</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Hexo/">Hexo</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/HexoToc/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>修复libssl.so.1 not found</title>
      <link>https://blog.kcbpmbf.com/2022/08/Termuxlibssl/</link>
      <guid>https://blog.kcbpmbf.com/2022/08/Termuxlibssl/</guid>
      <pubDate>Sat, 13 Aug 2022 12:13:01 GMT</pubDate>
      
      <description>&lt;p&gt;在使用termux的时候，会报如下错误&lt;br&gt; &amp;#x2F;data&amp;#x2F;data&amp;#x2F;com.termux&amp;#x2F;files&amp;#x2F;usr&amp;#x2F;lib&amp;#x2F;apt&amp;#x2F;“: library “libssl.so.1.1” not found&lt;br&gt;我们拥有3种办法可以解决&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>在使用termux的时候，会报如下错误<br> &#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;lib&#x2F;apt&#x2F;“: library “libssl.so.1.1” not found<br>我们拥有3种办法可以解决</p><span id="more"></span><h2 id="第一种-适合没有重要数据的用户"><a href="#第一种-适合没有重要数据的用户" class="headerlink" title="第一种(适合没有重要数据的用户)"></a>第一种(适合没有重要数据的用户)</h2><p>进入设置，清除termux全部数据，然后打开Termux，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list &amp;&amp; apt update &amp;&amp; apt upgrade</span><br></pre></td></tr></table></figure><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>执行如下命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg i openssl-1.1</span><br></pre></td></tr></table></figure><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h2><p>把<code>/data/data/com.termux/files/usr/lib/openssl-1.1</code>下面的libssl.so.1.1和libcrypto.so.1.1两个文件，复制到上一层目录<code>/data/data/com.termux/files/usr/lib</code>就行了<br>来源<a href="https://blog.utermux.dev/ut/fixopenssl1.html/comment-page-1#comment-5">https://blog.utermux.dev/ut/fixopenssl1.html/comment-page-1#comment-5</a></p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Termux/">Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/08/Termuxlibssl/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>xfce4更换主题</title>
      <link>https://blog.kcbpmbf.com/2022/03/xfce4%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</link>
      <guid>https://blog.kcbpmbf.com/2022/03/xfce4%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</guid>
      <pubDate>Mon, 14 Mar 2022 11:36:49 GMT</pubDate>
      
      <description>&lt;p&gt;xfce4更换主题&amp;#x2F;美化&lt;br&gt;设置主题 字体 图标&lt;/p&gt;
&lt;h2 id=&quot;1-下载主题-字体-图标-鼠标文件&quot;&gt;&lt;a href=&quot;#1-下载主题-字体-图标-鼠标文件&quot; class=&quot;headerlink&quot; title=&quot;1.下载主题 字体 图标 鼠标文件&quot;&gt;&lt;/a&gt;1.下载主题 字体 图标 鼠标文件&lt;/h2&gt;&lt;p&gt;找主题 找图标 找鼠标（鼠标样式）可以去&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>xfce4更换主题&#x2F;美化<br>设置主题 字体 图标</p><h2 id="1-下载主题-字体-图标-鼠标文件"><a href="#1-下载主题-字体-图标-鼠标文件" class="headerlink" title="1.下载主题 字体 图标 鼠标文件"></a>1.下载主题 字体 图标 鼠标文件</h2><p>找主题 找图标 找鼠标（鼠标样式）可以去</p><span id="more"></span> <p><a href="https://www.xfce-look.org/">https://www.xfce-look.org/</a><br>如果您英语不好 建议使用带翻译的浏览器打开</p><h3 id="1-1-主题"><a href="#1-1-主题" class="headerlink" title="1.1 主题"></a>1.1 主题</h3><p>选择到您心仪的主题后<br>滑到下面 找到下载按钮 进行下载<br>如果你点击下载后，有不止一个文件，那么请结合前文的简介和文件的名字来判别<br>比如 带<code>dark</code>的名字 就是黑暗 通常来说 他的界面是黑的<br>再比如带<code>light</code> 就是光，亮，灯的意思 那么他的界面就是白的<br>选择你想要的进行下载<br>也有可能有dark和light或是还有一个文件名字是和主题相同的 一模一样 不带其他的<br>先看前面的简介 如果没有的话 通常来说 下载这个就可以 里面应该是light和dark两个都有<br>如果你选择的主题点击下载后 只有一个文件选项<br>那么没什么好说的 直接点击下载就行了</p><h3 id="1-2-图标"><a href="#1-2-图标" class="headerlink" title="1.2 图标"></a>1.2 图标</h3><p>找到您喜欢的图标后<br><code>同上</code><br>也是看简介和文件名字来区分<br>不过可能文件名字是颜色的<br>比如 green blue 这种的话一般在简介都有<br>想知道具体图标换了色是什么样子的<br>滑到最上边是有个图片的 能左右换<br>一般的话 图标作者是会上传各个颜色的图标的图片<br>也有可能在简介里有<br>如果你点击下载后 只有一个文件选项<br>也是直接点击下载<br>如果你在下载的列表里面发现了文件名字和图标名字相同的 不带什么light之类的<br>一模一样的 那么通常来说下载这个就可以</p><h3 id="1-3-字体"><a href="#1-3-字体" class="headerlink" title="1.3 字体"></a>1.3 字体</h3><p>你可以在网上下载字体文件</p><h3 id="1-4-鼠标"><a href="#1-4-鼠标" class="headerlink" title="1.4 鼠标"></a>1.4 鼠标</h3><p>你可以在上面的网站中下载鼠标样式文件<br>选择方法<code>同上</code></p><h2 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h2><p>鼠标主题目录 &#x2F;usr&#x2F;share&#x2F;icons<br>图标主题目录 &#x2F;usr&#x2F;share&#x2F;icons<br>桌面主题目录 &#x2F;usr&#x2F;share&#x2F;themes<br>字体目录 &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;</p><p>当你下载完后<br>你发现是<code>tar.gz</code>的格式 这是压缩包 具体百度查看<br>我们需要把你下载的压缩包 放到<code>相应的目录</code>里面<br>你可以使用<code>mv命令</code>进行移动<br>如果您不会<code>mv命令</code>的话 可以使用<code>文件管理器</code><br>移动完成后<br>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvpf xxx.tar.gz</span><br></pre></td></tr></table></figure><p>命令来解压</p><ul><li>问：使用终端我该怎么进那个目录<br>答：使用cd命令 cd 文件路径<br>解压完成后<br>点击菜单<br>然后找到<br>设置管理器 &gt; 外观 来进行设置<br>英文叫Appearance<br>第一个是主题选择<br>第二个是图标选择<br>第三个是字体选择<br>至于鼠标选择<br>需要退出外观<br>来到设置管理器 里面有个鼠标<br>也就是鼠标 &gt; 主题<br><strong>注意：主题更换完后，需要把上面的框框也给改成您的主题，需要到菜单 &gt; 窗口管理器设置进行更改</strong></li></ul><h2 id="3-设置壁纸"><a href="#3-设置壁纸" class="headerlink" title="3.设置壁纸"></a>3.设置壁纸</h2><p>在桌面 右键进行设置</p>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/Linux/">Linux</category>
      
      
      <comments>https://blog.kcbpmbf.com/2022/03/xfce4%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>处理软件包出错</title>
      <link>https://blog.kcbpmbf.com/2021/11/%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%87%BA%E9%94%99/</link>
      <guid>https://blog.kcbpmbf.com/2021/11/%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%87%BA%E9%94%99/</guid>
      <pubDate>Mon, 15 Nov 2021 13:08:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;有时候我们安装xfce桌面时或安装其他东西时&lt;br&gt;可能会报以下错误&lt;br&gt;&lt;strong&gt;处理软件包xxx(–configure)时出错等信息&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;例如：处理软件包 gvfs:arm64 (–configure)时出错&lt;/strong&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>有时候我们安装xfce桌面时或安装其他东西时<br>可能会报以下错误<br><strong>处理软件包xxx(–configure)时出错等信息</strong><br><strong>例如：处理软件包 gvfs:arm64 (–configure)时出错</strong></p><span id="more"></span><h2 id="2-解决办法"><a href="#2-解决办法" class="headerlink" title="2.解决办法"></a>2.解决办法</h2><ol><li>您可以在终端内输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /var/lib/dpkg/info /var/lib/dpkg/info_bak &amp;&amp; <span class="built_in">mkdir</span> /var/lib/dpkg/info &amp;&amp; apt-get update &amp;&amp; apt-get -f install &amp;&amp; <span class="built_in">mv</span> /var/lib/dpkg/info/* /var/lib/dpkg/info_bak/ &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/dpkg/info &amp;&amp; <span class="built_in">mv</span> /var/lib/dpkg/info_bak /var/lib/dpkg/info</span><br></pre></td></tr></table></figure>解决该问题<br><strong>注：软件名不相同但是报错信息相同也是可以使用该命令的</strong><br>通常情况下，该命令是管用的<br>如果您输入该指令后，依旧报错 请查看是否为其他地方问题 或 该rootfs已经废了 没救了（apt这块）<a class="tag is-dark is-medium" href="https://unsplash.com/photos/qxO2PBn7eKU" target="_blank"><span class="icon"><i class="fas fa-camera"></i></span>&nbsp;&nbsp;Făgăraș Mountains, Romania by Lucian Dachman</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Termux/">Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/Linux/">Linux</category>
      
      
      <comments>https://blog.kcbpmbf.com/2021/11/%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%87%BA%E9%94%99/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>pulseaudio报错</title>
      <link>https://blog.kcbpmbf.com/2021/10/pulseaudio/</link>
      <guid>https://blog.kcbpmbf.com/2021/10/pulseaudio/</guid>
      <pubDate>Sun, 17 Oct 2021 10:42:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;有时候我们使用rootfs或恢复包的时候&lt;br&gt;启动时 有时会报以下错误&lt;br&gt;&lt;strong&gt;[pulseaudio] main.c: Daemon startup failed.&lt;/strong&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>有时候我们使用rootfs或恢复包的时候<br>启动时 有时会报以下错误<br><strong>[pulseaudio] main.c: Daemon startup failed.</strong></p><span id="more"></span><p><img src="https://pic.imgdb.cn/item/62f7c07916f2c2beb1e511fd.jpg" alt="错误图片"> </p><h2 id="2-解决办法"><a href="#2-解决办法" class="headerlink" title="2.解决办法"></a>2.解决办法</h2><ol><li>您可以在终端内输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> LD_LIBRARY_PATH &amp;&amp; pulseaudio --<span class="built_in">kill</span></span><br></pre></td></tr></table></figure>再次尝试启动rootfs</li></ol><p>如果还是不行，您可以把他忘了，过几天再试试（管用）</p><ol start="2"><li>如果您不需要声音的话<br>您可以找一下启动脚本，通过以下命令来寻找</li></ol><ul><li>which （您启动rootfs时的命令）<br>比如 我安装了一个Ubuntu的系统<br>他的启动命令是start-Ubuntu，则<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> start-Ubuntu</span><br></pre></td></tr></table></figure>终端输出的那个就是文件所在路径<br>一般是这样的<br><code>/data/data/com.termux/files/home/start-Ubuntu</code><br>那么您可以使用nano或vim编辑器进行编辑<br>如何安装、使用nano或vim？  这里小白请百度一下<br>找到<code>pulseaudio --start</code>命令并删除 保存即可</li></ul><hr>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Termux/">Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/">常见问题</category>
      
      
      <comments>https://blog.kcbpmbf.com/2021/10/pulseaudio/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Termux搭建Hexo并部署到GitHub</title>
      <link>https://blog.kcbpmbf.com/2021/10/Termuxhexo/</link>
      <guid>https://blog.kcbpmbf.com/2021/10/Termuxhexo/</guid>
      <pubDate>Sat, 16 Oct 2021 14:35:06 GMT</pubDate>
      
      <description>&lt;article class=&quot;message is-info&quot;&gt;&lt;div class=&quot;message-body&quot;&gt;
&lt;p&gt;此篇文章同时适用于其他的Linux发行版本，不止是Termux，您也可以在您的电脑上使用deepin或Ubuntu进行操作 前提要求是您需要在您的系统中安装好nodejs git &lt;a href=&quot;https://blog.kcbpmbf.com/2021/10/Termuxhexo/&quot;&gt;其他系统安装nodejs git请点击此处&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;p&gt;你可以在Termux中搭建Hexo并把他部署到GitHub&amp;#x2F;Gitee&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<article class="message is-info"><div class="message-body"><p>此篇文章同时适用于其他的Linux发行版本，不止是Termux，您也可以在您的电脑上使用deepin或Ubuntu进行操作 前提要求是您需要在您的系统中安装好nodejs git <a href="https://blog.kcbpmbf.com/2021/10/Termuxhexo/">其他系统安装nodejs git请点击此处</a></p></div></article><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>你可以在Termux中搭建Hexo并把他部署到GitHub&#x2F;Gitee</p><span id="more"></span><!-- toc --><h2 id="2-安装前的准备工作"><a href="#2-安装前的准备工作" class="headerlink" title="2.安装前的准备工作"></a>2.安装前的准备工作</h2><p>我们要先把Termux更换为国内源（已换的可以忽略这步） 如果您是使用电脑使用其他的发行版本操作的话，请您自行查询换源命令，如果您没换的话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.bfsu.edu.cn/termux/apt/termux-main stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list &amp;&amp; apt update &amp;&amp; apt upgrade</span><br></pre></td></tr></table></figure><p>然后安装nodejs、openssh、git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nodejs openssh git</span><br></pre></td></tr></table></figure><p>安装完成后 更新一下npm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm</span><br></pre></td></tr></table></figure><p>执行该命令npm更换淘宝源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p><strong>有GitHub账号忽略该步</strong><br>GitHub注册一个账号<br><a href="https://github.com/signup">GitHub注册链接</a></p><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>使用npm安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>然后创建一个目录，进入该目录，初始化hexo环境<br><strong>以下是命令解释：</strong></p><ul><li>mkdir 文件夹名字<br>创建文件夹命令 小白可以百度一下Linux常用命令进行更多的学习</li><li>cd 文件夹名字<br>进入该文件夹</li><li>hexo init<br>初始化hexo博客</li><li>hexo g<br>生成静态文件</li></ul><p>下面是一键命令 懂的兄弟就可以不用看了 直接复制粘贴即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &amp;&amp; <span class="built_in">mkdir</span> hexo &amp;&amp; <span class="built_in">cd</span> hexo &amp;&amp; hexo init &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><h2 id="4-部署-Hexo-到-GitHub-Pages"><a href="#4-部署-Hexo-到-GitHub-Pages" class="headerlink" title="4.部署 Hexo 到 GitHub Pages"></a>4.部署 Hexo 到 GitHub Pages</h2><p><strong>有GitHub账号忽略该步</strong><br>刚刚是不是注册好Github帐号了 如没注册 请翻阅上文</p><p>打开GitHub 主页，点击右上角头像旁边加号，找到New repository（创建储存库）点击它<br> <img src="/2021/10/Termuxhexo/1.png" alt="图片"><br>完成后点击 Create repository 创建<br>然后回到终端进入到hexo目录，安装 hexo-deployer-git，然后使用编辑器编辑叫_config.yml的文件 这里使用nano编辑器进行编辑<br>您也可以根据自己的喜好来更改编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save &amp;&amp; <span class="built_in">cd</span> &amp;&amp; <span class="built_in">cd</span> hexo &amp;&amp; nano _config.yml</span><br></pre></td></tr></table></figure><p>以上操作完成后，修改 _config.yml 文件末尾的 Deployment 部分<br>滑到最下面就能找到<br><strong>这里注意一下冒号后要加空格</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy：</span><br><span class="line">  type:  git</span><br><span class="line">  repo:  https://github.com/你的用户名/你的用户名.github.io.git</span><br><span class="line">  例如：https://github.com/Polaris-Koi/Polaris-Koi.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>改成上面那样 完成后 CTRL+x即可退出<br>接下来 我们打开github 在页面右上角点击你的头像，然后点击 Settings<br>在左侧边栏中，点击Developer settings（开发人员设置）<br>在左侧边栏中，单击Personal access tokens(个人访问令牌)<br>点击生成Generate new token新令牌<br><strong>注意：把您的令牌保密它相当于您的密码</strong><br><img src="/2021/10/Termuxhexo/2.png" alt="图片"><br>然后往下拉 点击绿色按钮生成令牌 记得复制 它只显示一次<br>完成以上操作后挂一个梯子</p><p>然后打开终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;您的GitHub 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;您的GitHub 邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>之后输入hexo d</p><p>然后他会问你用户名 填你自己的</p><p>注：上传到github时用的密码并不是用户密码而是令牌，github自2021&#x2F;8&#x2F;13后不支持用户密码验证</p><p>密码则填刚刚我们创建的令牌</p><p>完成以上操作 等待他输出INFO  Deploy done: git</p><p>这时访问您就可以访问https:&#x2F;&#x2F;用户名.github.io 就可以看到您的Hexo博客了</p><h2 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h2><p>以上只是最基本的Hexo博客搭建</p><h3 id="5-1-config-yml-文件配置"><a href="#5-1-config-yml-文件配置" class="headerlink" title="5.1 _config.yml 文件配置"></a>5.1 _config.yml 文件配置</h3><p> _config.yml 文件是您的Hexo博客的配置文件 更多可以查看</p><p><a href="https://blog.csdn.net/zemprogram/article/details/104288872">https://blog.csdn.net/zemprogram/article/details/104288872</a></p><p>或百度来参考他人的配置进行更改</p><h3 id="5-2-绑定自己的域名"><a href="#5-2-绑定自己的域名" class="headerlink" title="5.2 绑定自己的域名"></a>5.2 绑定自己的域名</h3><p>hexo博客默认是使用的GitHub 的子域名github.io 您也可以使用自己的域名 便于SEO（搜索优化）</p><ul><li>5.2.1 注册域名和解析<br>我们可以去腾讯云和阿里云注册域名，当然 别的地方也行<br><a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a> 腾讯云<br><a href="https://cn.aliyun.com/">https://cn.aliyun.com/</a> 阿里云</li></ul><p>注册完成后 找到域名控制台 如果自带解析请删除自带解析<br>添加新的解析<br>1.主机记录 填<code>@</code><br>2.记录类型 填<code>CNAME</code><br>3.记录值 填<code>博客网址（不带https://）</code><br>4.填完以上信息点保存</p><p>然后回到终端在博客根目录的source文件夹下新建一个名为CNANE的文件,里面写入您的域名<br><code>cd &amp;&amp; cd hexo &amp;&amp; cd source</code><br>这里使用nano编辑器进行编辑<br>您也可以根据自己的喜好来更改编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano CNANE </span><br></pre></td></tr></table></figure><p>里面写入您的域名 前面不加任何东西 比如 baidu.com 不要加www或其他的</p><ul><li><p>然后我们来到github 从左边 找到您的库 点击他 然后点最上面的Settings<br>往下拉 找到GitHub Pages 点蓝色的Check it out here!<br>然后往下拉 找到 Custom domain<br>填写您的域名 点Save（保存）</p></li><li><p>开启https（访问更安全）<br>还是刚刚的界面<br>勾选Enforce HTTPS选项即可<br>其他的 您可以找个带翻译的浏览器 看看其他选项</p></li></ul><h3 id="5-3-创建-发布-删除文章"><a href="#5-3-创建-发布-删除文章" class="headerlink" title="5.3 创建,发布,删除文章"></a>5.3 创建,发布,删除文章</h3><ul><li><p>创建文章<br>打开终端 进入hexo目录 输入<br><code>hexo new &quot;文章&quot;</code><br>即可创建文章，然后source&#x2F;_posts文件夹中会出现一个 文章.md 文件 用编辑器打开他就可以开始写文章了<br>这里仅仅简单介绍，关于更多的可以查看官方中文文档<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a> 或 <a href="https://www.jianshu.com/p/265b2c653e6f">https://www.jianshu.com/p/265b2c653e6f</a> 或 进行百度</p></li><li><p>发布文章</p><p>打开终端 输入 <code>hexo g &amp;&amp; hexo d</code></p><p>输入名字和您的令牌 等待输出INFO  Deploy done: git 即可发布成功</p></li><li><p>删除文章</p><p>删除您source文件夹中的md文件即可，然后更新到github</p><p><code>hexo g &amp;&amp; hexo d</code></p></li><li><p>新建导航选项页界面(就是about关于等界面)</p><p><code>hexo new page 导航选项页文件名</code></p></li></ul><p>然后source下就有对应的文件夹 比如 hexo new page about 则就有source&#x2F;about文件夹 打开有.md文件进行编辑即可</p><h3 id="5-4-在文章中添加分类或标签"><a href="#5-4-在文章中添加分类或标签" class="headerlink" title="5.4 在文章中添加分类或标签"></a>5.4 在文章中添加分类或标签</h3><ul><li><p>分类<br>一篇文章只能有一个分类，如果添加了多个分类，则下一个分类为子分类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- 分类（第一层）</span><br><span class="line">- 子分类（第二层）</span><br></pre></td></tr></table></figure></li><li><p>标签<br>一篇文章可以有多个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">- 标签</span><br><span class="line">- 标签1</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-5-Hexo常用命令"><a href="#5-5-Hexo常用命令" class="headerlink" title="5.5 Hexo常用命令"></a>5.5 Hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;name&quot;</span>       <span class="comment"># 新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;name&quot;</span>  <span class="comment"># 新建页面</span></span><br><span class="line">hexo g                <span class="comment"># 生成页面</span></span><br><span class="line">hexo d                <span class="comment"># 部署</span></span><br><span class="line">hexo g -d             <span class="comment"># 生成页面并部署</span></span><br><span class="line">hexo s                <span class="comment"># 本地预览</span></span><br><span class="line">hexo clean            <span class="comment"># 清除缓存和已生成的静态文件</span></span><br><span class="line">hexo <span class="built_in">help</span>             <span class="comment"># 帮助</span></span><br></pre></td></tr></table></figure><h3 id="5-6-Hexo主题"><a href="#5-6-Hexo主题" class="headerlink" title="5.6 Hexo主题"></a>5.6 Hexo主题</h3><p>您可以去github和网上找一些主题 然后根据主题文档来进行更换主题</p><ul><li>为博客添加网站统计等等<br>查看主题文档</li></ul><h3 id="5-7-部署到Gitee"><a href="#5-7-部署到Gitee" class="headerlink" title="5.7 部署到Gitee"></a>5.7 部署到Gitee</h3><p>因为Github的访问很慢 他的服务器在国外 我们可以把他挪到gitee<br>gitee是国内的<br><a href="https://gitee.com/">https://gitee.com/</a> 官网 注册一个账号</p><p>注册完成后<br>1.点开右上角头像旁边加号 点 从github&#x2F;gitLab导入仓库<br>2.选择从url导入<br>3.复制您的github博客地址过来填入，注意不是访问地址，是你仓库地址<br><a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%94%A8%E6%88%B7%E5%90%8D.github.io">https://github.com/用户名/用户名.github.io</a><br>4.仓库名称为您的用户名<br>5.路径自动填 不用管<br>6.点击导入<br>7.等待同步完成 同步完成后 会自动跳转<br>然后往右边看有个服务点击 展开找到gitee pages 如果你是新用户的话 得实名<br>8.勾选强制https 点击启动即可<br><strong>注意Gitee不支持自动更新 每次hexo d上传到github的时候需要登录gitee手动点击更新</strong></p><ul><li>Gitee暂时不可使用个性化域名<br>21年11月13日晚上23：55 查询官方文档<br>因业务调整，Gitee Pages Pro 暂时关闭个人用户购买入口，已开通用户的仓库不受影响。GVP 项目和付费企业使用不受影响。</li></ul><h3 id="5-8-Hexo插入图片"><a href="#5-8-Hexo插入图片" class="headerlink" title="5.8 Hexo插入图片"></a>5.8 Hexo插入图片</h3><ul><li>安装插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><a href="https://www.cnblogs.com/gispathfinder/p/12239390.html">https://www.cnblogs.com/gispathfinder/p/12239390.html</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">修改_config.yml把post_asset_folder选项从<span class="literal">false</span>改成<span class="literal">true</span></span><br><span class="line">打开/node_modules/hexo-asset-image/index.js文件</span><br><span class="line">把var endPos = link.lastIndexOf(<span class="string">&#x27;.&#x27;</span>);修改成var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);即可</span><br><span class="line">就是这样的</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">      var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">post_asset_folder 设置为<span class="literal">true</span>后功能开启，每次使用命令hexo new &lt;title&gt; 创建新的博客文章时，在文章的统一目录下会同时生成一个同名文件夹，将所需的图片等资源放入此文件夹中，便可以在文章中引用</span><br><span class="line">先将需要插入的图片放在同名文件夹中，再按照 markdown 语法来插入图片即可</span><br><span class="line">![Alt text](path)</span><br><span class="line"></span><br><span class="line">比如 我放了一个叫1.jpg的图片放到了文件夹中</span><br><span class="line">引用则是</span><br><span class="line">![图片](1.jpg)</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-9-Markdown语法"><a href="#5-9-Markdown语法" class="headerlink" title="5.9 Markdown语法"></a>5.9 Markdown语法</h3><p>.md即markdown文件的基本常用编写语法 就是你写博文的时候用的语法<br><a href="https://www.jianshu.com/p/399e5a3c7cc5">https://www.jianshu.com/p/399e5a3c7cc5</a></p><h3 id="5-10-常见问题"><a href="#5-10-常见问题" class="headerlink" title="5.10 常见问题"></a>5.10 常见问题</h3><ul><li>文章显示问题<br>默认的话 博客是在主页会显示全文 看起来很别扭<br>您可以在文章中插入 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt; </span><br></pre></td></tr></table></figure>只显示该代码前面的内容 剩下的则变成阅读更多按钮</li><li>摘要<br>在你的文章中添加<code>&lt;!-- more --&gt;</code>标签。 标签前面的文章内容会被标记为摘要，而其后的内容不会显示在文章列表上。<br>你也可以在文章的front-matter中设置自定义摘要。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 一篇文章</span><br><span class="line"><span class="built_in">date</span>: 2020-01-01</span><br><span class="line">excerpt: 这是一篇关于...</span><br><span class="line">---</span><br><span class="line"><span class="comment"># 文章内容...</span></span><br></pre></td></tr></table></figure>其中的excerpt就是摘要<br><a href="https://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#more">来源</a></li><li>修改部署到github没有更改<br>使用<code>hexo clean</code>清理缓存和已经生成的静态文件<br>然后使用<code>hexo g</code>重新生成<br>使用<code>hexo d</code>重新部署</li><li>为什么Cannot GET &#x2F;tags&#x2F;或Cannot GET &#x2F;about&#x2F;<br>没有生成导航选项页界面 翻阅上文</li><li>为什么访问这么慢<br>因为是Github他的服务器在外国<br>可以把他同步到国内的Gitee 翻阅上文<br>为什么不使用Coding Pages啊 我看网上好多教程都使用Coding Pages<br>2020年的时候 要钱了 具体请百度</li></ul><hr>]]></content:encoded>
      
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/">Linux&amp;Termux</category>
      
      <category domain="https://blog.kcbpmbf.com/categories/Linux-Termux/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <category domain="https://blog.kcbpmbf.com/tags/Hexo/">Hexo</category>
      
      <category domain="https://blog.kcbpmbf.com/tags/Termux/">Termux</category>
      
      
      <comments>https://blog.kcbpmbf.com/2021/10/Termuxhexo/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
